#!/bin/bash

# originally published at https://github.com/GeertJohan/kube-multi-config

mkdir -p ${HOME}/.kube-multi

# List of files in config.d
kubeConfigFileList=$(find ${HOME}/.kube-multi -type f -name '*.y*l')

# Always include the original kubeconfig file for backwards compatibility. Also,
# some tools (for example `gcloud`) add kube contexts directly to
# `.kube/config`.
KUBECONFIG="${HOME}/.kube/config"

# Combine all file paths into the single `KUBECONFIG` variable.
while IFS= read -r kubeConfigFile; do
  # MacOS bringt die find-Ergebnisse mit Leerzeichen statt NewLine. Leerzeichen durch Seperator eretzt
  kubeConfigFile=$(echo ${kubeConfigFile} | sed -e 's/ /:/g')
  KUBECONFIG+=":${kubeConfigFile}"
done <<< ${kubeConfigFileList}

# extend with shared directory if exists
if [[ -d "${HOME}/.kube-shared" ]]
then 
  kubeConfigFileList=$(find ${HOME}/.kube-shared  -maxdepth 1 -type f -name '*.y*l')
  while IFS= read -r kubeConfigFile; do
    # MacOS bringt die find-Ergebnisse mit Leerzeichen statt NewLine. Leerzeichen durch Seperator eretzt
    kubeConfigFile=$(echo ${kubeConfigFile} | sed -e 's/ /:/g')
    KUBECONFIG+=":${kubeConfigFile}"
  done <<< ${kubeConfigFileList}
fi

# Export the `KUBECONFIG` variable so that it can be 'seen' by commands
# following this script.

export KUBECONFIG
